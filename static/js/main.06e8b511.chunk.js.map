{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","styles","center","display","justifyContent","alignItems","button","margin","App","props","state","target","num1","num2","num3","num4","num5","num6","bignums","clock","disable_button","show_modal","show_answer","oneBig","bind","twoBig","threeBig","fourBig","zeroBig","handleModal","this","setState","Math","floor","random","timer","setInterval","tick","clearInterval","answer_link","concat","toString","button_group","answer_button","ButtonGroup","style","Button","onClick","disabled","variant","marginLeft","href","marginTop","Jumbotron","fluid","ListGroup","horizontal","Item","Modal","show","onHide","Header","closeButton","Title","Body","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.06e8b511.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, ButtonGroup, Jumbotron, ListGroup, Modal } from 'react-bootstrap';\n\nconst styles = {\n  center: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  button:{\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 25\n  }\n}\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {target: 0,\n                  num1: 0,\n                  num2: 0,\n                  num3: 0,\n                  num4: 0,\n                  num5: 0,\n                  num6: 0,\n                  bignums: [25,50,75,100],\n                  clock: \"Countdown!\",\n                  disable_button: false,\n                  show_modal: false,\n                  show_answer: false\n                }\n    this.oneBig = this.oneBig.bind(this);\n    this.twoBig = this.twoBig.bind(this);\n    this.threeBig = this.threeBig.bind(this);\n    this.fourBig = this.fourBig.bind(this);\n    this.zeroBig = this.zeroBig.bind(this);\n    this.target = this.target.bind(this);\n    this.handleModal = this.handleModal.bind(this);\n  }\n\n\n  handleModal(){\n    this.setState({show_modal: !this.state.show_modal, clock: \"Countdown!\"});\n  }\n  target(){\n    this.setState({\n      target: Math.floor(Math.random() * (999 - 100 + 1)) + 100\n    })\n    this.timer = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  tick(){\n    this.setState({\n      clock: this.state.clock - 1,\n    })\n    if (this.state.clock === 0){\n      clearInterval(this.timer);\n      this.setState({\n                      clock: \"Time Up!\",\n                      disable_button: false,\n                      show_answer: true,\n                      answer_link: \"http://panzi.github.io/numbers-js/?target=\".concat(this.state.target.toString(), \"&numbers=\", this.state.num1.toString(), \",\", this.state.num2.toString(), \",\", this.state.num3.toString(), \",\", this.state.num4.toString(), \",\", this.state.num5.toString(), \",\", this.state.num6.toString())\n                    });\n    }\n  }\n  oneBig(){\n    this.setState({\n                  num1: this.state.bignums[Math.floor(Math.random() * 4)],\n                  num2: Math.floor(Math.random() * (10 - 1 + 1)) + 1,\n                  num3: Math.floor(Math.random() * (10 - 1 + 1)) + 1,\n                  num4: Math.floor(Math.random() * (10 - 1 + 1)) + 1,\n                  num5: Math.floor(Math.random() * (10 - 1 + 1)) + 1,\n                  num6: Math.floor(Math.random() * (10 - 1 + 1)) + 1,\n                  clock: 30,\n                  disable_button: true,\n                  show_answer: false\n                })\n    this.target()\n\n  }\n  twoBig(){\n    this.setState({\n                  num1: this.state.bignums[Math.floor(Math.random() * 4)],\n                  num2: this.state.bignums[Math.floor(Math.random() * 4)],\n                  num3: Math.floor(Math.random() * (10 - 1 + 1)) + 1,\n                  num4: Math.floor(Math.random() * (10 - 1 + 1)) + 1,\n                  num5: Math.floor(Math.random() * (10 - 1 + 1)) + 1,\n                  num6: Math.floor(Math.random() * (10 - 1 + 1)) + 1,\n                  clock: 30,\n                  disable_button: true,\n                  show_answer: false\n                })\n    this.target()\n\n  }\n  threeBig(){\n    this.setState({\n                  num1: this.state.bignums[Math.floor(Math.random() * 4)],\n                  num2: this.state.bignums[Math.floor(Math.random() * 4)],\n                  num3: this.state.bignums[Math.floor(Math.random() * 4)],\n                  num4: Math.floor(Math.random() * (10 - 1 + 1)) + 1,\n                  num5: Math.floor(Math.random() * (10 - 1 + 1)) + 1,\n                  num6: Math.floor(Math.random() * (10 - 1 + 1)) + 1,\n                  clock: 30,\n                  disable_button: true,\n                  show_answer: false\n                })\n    this.target()\n\n  }\n  fourBig(){\n    this.setState({\n                  num1: this.state.bignums[Math.floor(Math.random() * 4)],\n                  num2: this.state.bignums[Math.floor(Math.random() * 4)],\n                  num3: this.state.bignums[Math.floor(Math.random() * 4)],\n                  num4: this.state.bignums[Math.floor(Math.random() * 4)],\n                  num5: Math.floor(Math.random() * (10 - 1 + 1)) + 1,\n                  num6: Math.floor(Math.random() * (10 - 1 + 1)) + 1,\n                  clock: 30,\n                  disable_button: true,\n                  show_answer: false\n                })\n    this.target()\n\n  }\n  zeroBig(){\n    this.setState({\n                  num1: Math.floor(Math.random() * (10 - 1 + 1)) + 1,\n                  num2: Math.floor(Math.random() * (10 - 1 + 1)) + 1,\n                  num3: Math.floor(Math.random() * (10 - 1 + 1)) + 1,\n                  num4: Math.floor(Math.random() * (10 - 1 + 1)) + 1,\n                  num5: Math.floor(Math.random() * (10 - 1 + 1)) + 1,\n                  num6: Math.floor(Math.random() * (10 - 1 + 1)) + 1,\n                  clock: 30,\n                  disable_button: true,\n                  show_answer: false\n                })\n    this.target()\n\n  }\n\n  render(){\n    let button_group;\n    if (this.state.disable_button){\n      button_group =\n      <div>\n        <ButtonGroup style={styles.button}>\n          <Button onClick={this.oneBig} disabled>\n            1 big, 5 small\n          </Button>\n          <Button variant=\"outline-primary\" onClick={this.twoBig} disabled>\n            2 big, 4 small\n          </Button>\n          <Button onClick={this.threeBig} disabled>\n            3 big, 3 small\n          </Button>\n          <Button variant=\"outline-primary\" onClick={this.fourBig} disabled>\n            4 big, 2 small\n          </Button>\n          <Button onClick={this.zeroBig} disabled>\n            0 big, 6 small\n          </Button>\n        </ButtonGroup>\n        <Button style={{marginLeft: \"45%\"}} variant=\"outline-primary\" onClick={this.handleModal} disabled>\n          How To Play\n        </Button>\n      </div>\n\n    } else{\n      button_group =\n      <div>\n        <ButtonGroup style={styles.button}>\n          <Button onClick={this.oneBig}>\n            1 big, 5 small\n          </Button>\n          <Button variant=\"outline-primary\" onClick={this.twoBig}>\n            2 big, 4 small\n          </Button>\n          <Button onClick={this.threeBig}>\n            3 big, 3 small\n          </Button>\n          <Button variant=\"outline-primary\" onClick={this.fourBig}>\n            4 big, 2 small\n          </Button>\n          <Button onClick={this.zeroBig}>\n            0 big, 6 small\n          </Button>\n        </ButtonGroup>\n        <Button style={{marginLeft:\"45%\"}} variant=\"outline-primary\" onClick={this.handleModal}>\n          How To Play\n        </Button>\n      </div>\n    }\n    let answer_button;\n    if(this.state.show_answer){\n      answer_button = <a href={this.state.answer_link} target=\"_blank\"><Button style={{marginLeft:\"42%\", marginTop: \"10px\"}}>\n        Click Here To See Answers\n      </Button></a>\n    } else{\n      answer_button = <p></p>\n    }\n    return(\n      <Jumbotron fluid>\n        <h1 style={styles.center}>{this.state.clock}</h1>\n        <hr></hr>\n        <h3 style={styles.center}>Your Target:</h3>\n        <h2 style={styles.center}>{this.state.target}</h2>\n        <h3 style={styles.center}>Your numbers:</h3>\n        <ListGroup horizontal style={styles.center}>\n          <ListGroup.Item>{this.state.num1}</ListGroup.Item>\n          <ListGroup.Item>{this.state.num2}</ListGroup.Item>\n          <ListGroup.Item>{this.state.num3}</ListGroup.Item>\n          <ListGroup.Item>{this.state.num4}</ListGroup.Item>\n          <ListGroup.Item>{this.state.num5}</ListGroup.Item>\n          <ListGroup.Item>{this.state.num6}</ListGroup.Item>\n        </ListGroup>\n        {button_group}\n        {answer_button}\n\n        <Modal show={this.state.show_modal} onHide={this.handleModal}>\n          <Modal.Header closeButton  >\n            <Modal.Title>How To Play</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <ul>\n              <li>Players should split themselves into 2 teams. Both teams marticipate in each round.</li>\n              <li>6 numbers will be chosen. Teams will take turns choosing how many large numbers you get, from 0 to 4. The remaining ones will be small numbers.</li>\n              <li>All cards within each category are drawn at random, with uniform probability.</li>\n              <li>The target is a 3-digit number from 100 to 999, picked at random with uniform distribution.</li>\n              <li>Your objective is to use the 6 numbers to get the target number within 30 seconds. It may be useful to have a pen and paper.</li>\n              <li>Only the 4 elementary mathematical operations are allowed (+ - * /).</li>\n              <li>You can use as many of the 6 input numbers as you want, but can only use each number once.</li>\n              <li>All operations must result in integers.</li>\n              <li>Once you choose how many big numbers and how many small numbers you would like, the numbers are chosen, then the target number is generated and a 30 second timer will begin.</li>\n              <li>Don't worry if you can't solve the problem within 30 seconds! Take as much time as you'd like.</li>\n            </ul>\n            <h3>Scoring:</h3>\n              <p>Points are awarded to the contestant which gets closest to the target number, in the following manner:</p>\n              <ul>\n                <li>10 Points if the target was hit exactly.</li>\n                <li>7 points if the result is within a distance of 1 to 5 from the target.</li>\n                <li>5 points if the result is within a distance of 6 to 10 from the target.</li>\n                <li>0 otherwise.</li>\n              </ul>\n          </Modal.Body>\n        </Modal>\n\n\n\n\n      </Jumbotron>\n    )\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}